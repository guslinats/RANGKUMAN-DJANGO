RANGKUMAN-DJANGO
Kita akan melewati siklus pembuatan aplikasi yaitu :
a.	Development : mengerjakan projek aplikasi kita atau proses pembuatan, pengembangan . kita di awal-awal akan membuat form,model,view,tampilan itu adalah tahapan development atau pengembangan.
b.	Testing : setelah dilakukan pembuatan otomatis kita akan melakukan uji coba agar mengetahui kekurangan dari kegiatan tersebut. Mengecek apakah sudah sesuai atau apakah ada bug. Testing ini juga dilakukan saat production.
c.	Production : aplikasi kita yang sudah di buat sudah di deploy / sudah bisa di publish / sudah bisa digunakan oleh orang lain. Bisa juga user melakukan testing pada saat tahap ini. 
Alur kerja nya dari client yang melakukan request langsung ditangani oleh web server lalu ke wsgi lalu terakhir ke django atau perputaran yang sudah kita buat yaitu aplikasi perpustakaan tersebut.
Yang perlu disiapkan adalah app (github,writelab,perpus), terminal, server, domain. 

1. INTRODUCTION
Belajar Django merupakan lanjutan dari belajar python. Djanggo merupakan web framework (free open-source) yang mengikuti pola arsitektur MVT dan ditulis dengan bahasa Python. Web Framework merupakan software Kerangka kerja yang membantu membuat pengembangan situs web secara mudah dan cepat di dalamnya sudah tersedia fungsi-fungsi yang siap pakai Hai untuk mengakses ke database template dan juga section jadi django adalah web framework untuk membantu membuat situs web.  lalu MVT (model view template) merupakan definitif dari database atau representasi tabel-tabel didatabase views berisi fungsi-fungsi untuk mengatur proses http request dan juga respon template berhubungan dengan tampilan atau user interface yang isinya file html ini adalah tiga komponen utama untuk ia membangun sebuah aplikasi. 

2. WORKFLOW 
Mengenal alur kerja Djanggo. Client melakukan request misalkan meminta url zulhilmi.id/ about atau profil lalu dicek oleh dear ones Apakah request profil ada di aplikasi django jika anda maka akan memilih view yang sesuai lalu dari view di cek lagi apakah request dari client ini membutuhkan data dari database jika membutuhkan data dari database maka video akan melakukan queryset ke model lalu model akan mengambil data dari database direspon ke view datanya akan dilempar ke template lalu direspon ke client ditampilkan. jadi setiap komponen-komponennya model view template memiliki peran masing-masing memiliki tugas masing-masing yang berhubungan satu sama lain.   jika anda maka akan memiliki view tapi jika tidak membutuhkan data itu tidak ada request ke databse dari view akan langsung memilih template lalu direspon ke client. jadi queryset di sana sifatnya opsional Jadi tergantung dari request jika request nya tidak membutuhkan database dari View bisa langsung memilih template dan direspon ke client.

3. APA SAJA YANG DIBUTUHKAN? 
Tools apa saja yang dibutuhkan untuk memulai dengan Django. 
- Pertama CMD atau terminal tools ini digunakan untuk menginstal Django membuat Project membuat tabs menjalankan server dan lain-lain. 
- Kedua Text Editor untuk menulis kode program. text editor ini bisa menggunakan Visual Studio Code ataupun text editor lainnya yang penting text editor. 
- Ketiga Web Browser karena kita membuat aplikasi web yang hasilnya harus dilihat lewat browser maka kita membutuhkan tools ini. 
- Keempat Python. 
- Terakhir yang kita butuhkan adalah Django itu sendiri.

Struktur Project Django 
Struktur project Django dapat di bagi menjadi 2 :
  1. Folder Konfigurasi Django
  2. Folder Project Django

      1. Folder Konfigurasi Django
1. __init__.py => Merupakan Sebuah File yang memberitahu bahwa folder ini merupakan sebuah packages 
2. Settings.py => Merupakan sebuah File yang yang berisi file setting dari project seperti registrais project, database, auth, dll.
3. Urls.py => Merupakan sebuah file yang berfungsi untuk mengatur routing dari project
4. wsgi.py => merupakan sebuah Web Server Gateway Interface
      2. Folder Project Django
1. Model => merupakan sebuah file yang akan disi dengan model dari 	projcet biasanya di tulis kode yang berhubungan dengan model database 	( beckend).
2. View => Merupakan sebuah file yang mengurus masalah tampilan dari 	project kita.
3. Template => Merupakan sebuah folder yang berisi template HTML
4. Statis => Merupkan sebuah folder yang berisi file - file statis yang akan 	digunakn project kita, biasanya diisi dengan CSS,Javascript,Bootstrap dll.

4. Membuat Project 
cd Desktop Untuk menyimpan Project di Halaman Desktop
Django-admin startproject perpus. Perintah ini untuk membuat Project baru Bernama Perpus
-	Manage.py. Ini adalah file Perintah untuk berinteraksi dengan Project Django
-	__init__.py. Untuk memberitahukan Python bahwa Perpus adalah sebuah Package
-	Setting.py. Berisikan File Konfigurasi / Pengaturan seperti Konfigurasi Template, Database, dll
-	Urls.py. Berisikan pola – pola URL
-	Wsgi.py. Untuk development Project yang melibatkan Web server yang kompetibel dengan Wsgi / Mengonline-kan Project

5. Basic Routing 
Client memberikan Request untuk mengakses Halaman Buku pada Server Django namun PAGE NOT FOUND. Karena URL Buku yang di Request belum ada di Server. Untuk dapat melayani Request dari Client, harus dibuatkan URL baru seperti pada gambar berikut. Jika sudah, maka Request dari Client akan dapat terpenuhi.

6. Membuat APPS 
Apps adalah sebuah aplikasi pada Django yang mempunyai Model Database, View, Template, dan URLCons. Setiap Project di Django mempunyai Apps dan bisa lebih dari satu Apps.

7. Membuat View
Alur yang digunakan untuk membuat Views ini adalah Client, URLConf, View dan memberikan Response kepada Client. Views diciptakan untuk memenuhi Request dari Client.

8. Template
Pada tahap ini, Alur yang digunakan mulai berkembang. Dimulai dari Client, URLConf, View, dan Template. Pada bagian Settings.py Line 58. Tambahkan ‘DIRS’ : [‘template’] Buat Folder templates satu Level dengan settings, lalu buiat buku.html Membuat HTML sederhana  Lalu ubah Views.py

9. Django Template Language
1.	Substitusi Variabel : Untuk menampilkan Variabel ke Template yang dilemparkan dari Views
2.	Filter : Untuk memodifikasi Variabel yang akan ditampilkan
3.	Tags : Untuk melakukan control Flow seperti Looping, If Else, Include, dll untuk mengambil file eksternal

10. Template Extending
Template dasar untuk semua Halaman.  Template utama yang isinya Base.html adalah file html utama yang akan menampung konten – konten dari Template Apps. Didalam Apps akan dibuat folder template yang isinya hanya bagian – bagian konten. Bagian Konten akan diextend / dimasukkan kedalam Base.html

11. Static Files 
Static File adalah kumpulan File CSS, Java Script, dan gambar. Static File ini digunakan untuk mempercantik / memperindah tampilan Aplikasi yang dibuat dan memerikan pengalaman kenyamanan saat Aplikasi digunakan. 

12. Setup Boostrap
Tahap ini cukup mudah dilakukan karena kita hanya perlu memindahkan file – file CSS dan Java Script kedalam Folder static yang telah di Set Up. Download Bootstrap dan JQuery yang akan digunakan. Selanjutnya panggil file – file tersebut di Base.html

13. Setup Database
Django menggunakan DBMS Sqlite 3 dengan nama ‘db.sqlite3’. Ini bisa di Rename sesuai dengan keinginan kita seperti ‘perpustakaan.sqlite3’  Pada saat pertama kali melakukan Runserver, ini akan mengcreate database saja tidak termasuk tabel – tabel nya database. Selanjutnya dilakukan Migrasi dilakukan untuk menyebarkan / menginisialisasi tabel – tabel kedalam db.sqlite3 terhadap database project yang akan dibuat. Jika berhasil melakukan Migrasi, maka akan tampil seperti dibawah ini. 

14. Setuo Database Mysql
Konfigurasi MySql sebagai DBMS untuk project Django yang akan dibuat. Tahap ini bersifat Opsional, bisa tidak digunakan jika ingin menggunakan sqlite3 sebagai DBMS. Jika ingin menggunakan MySql sebagai DBMS, selanjutnya install MySql Installer. Jika berhasil diinstall, selanjutnya buka MySql Command Line lalu create Database. Konfigurasikan Database ke settings.py 

15. Models 
Models merupakan definitive dari database atau representasi tabel pada database. Dengan menggunakan models ini, kita tidak perlu lagi menggunakan Query SQL untuk membuat tabel di database. Ketika melakukan Migrasi pada model buku, maka Django akan melakukan Create Tabel Buku sesuai dengan field – field yang ada pada model buku ini. Maka jadilah Tabel pada Database yaitu Tabel Buku.

16. Models : Foreign Key 
Foreign Key digunakan untuk membuat Relasi antar tabel dalam database Relational. Kelompok_id pada gambar dibawah merupakan Foreign Key yang nanti nya akan diisi oleh id tabel kelompok

17. Django Admin 
Django admin adalah salah satu fitur yang power full ada pada djangon dikatakan power full karena bisa melakukan kru sederhana untuk mengolah data pada model yang kita buat. Biasanya menggunakan django ini untuk mengetes model yang kita buat apakah sudah selesai, sesuai, relasinya sudah benar. Sederhana tetapi sangat membantu dan lagi dajango admin ini bersifat private tidak semabarang orang bisa mengaksesnya harus log in dulu. 

18. Django Admin : modeladmin
Bagian kedua diepisode kali ini kita akan melakukan custom sederhana terhadap tampilan data buku, fill-fill apa saja yang ditampilkan sebagai informasi seperti judul,penulis,penerbit dan lain-lain. Kita akan menampilkan kotak pencarian dan filter kelompok buku. 

19. ORM (Object-Relation Mapping)
ORM (object relational mapping) merupakan teknik yang digunakan dalam pemrograman untuk menggunakan basisdata relasional sebagai penyimpanan data dengan bentuk objek. Perlu diketahui django menggunakan teknik ini untuk menggunakan database relasional kenapa? Agar kode python yang ditulis tidak campur aduk dengan query sql. Jadi, ORM ini bertugas sebagai penghubung aplikasi yang dibuat menggunakan database relasional.   

20. Forms : Model Form
Membuat file baru di perpustakaan dengan nama form. Lalu membuat viewsnya.  

21. Forms : Widgets
Didalam forms.py ditambahkan widgets,textInput merupakan typenya tambahkan atribut kelas didalamnya.

22. Crud : Menambah Data
Episode kali ini kita sudah masuk ke queryset, melakukan menambah data,menampilkan,mengubah dan mengapus data. Dari data yang sudah dibuat, selanjutnya kita akan menyimpannya ke dalam database. Prosesnya ada di views yang nantinya akan mengecek apakah data yang di submit oleh user sudah benar atau sudah valid, apabila sudah maka akan di simpan ke database. Lalu buka text editor buka file views. Fungsi dari csrf adalah untuk mngamankan form yang dibuat.

23. Crud : Menampilkan Menambah Data
Menampilkan data buku yang sudah dibbuat, seperti menampilkan nilai 90/100. Dan menampilkan kelompok seperti prodktif maka hasilnya pasti eror karena kelompok_id menurpakan type integer. Apabila menambah __nama maka akan bisa mengeluarkan hasilnya. Penggunaan queryset tidak sepanjang query. Untuk menampilkan limit pada queryset cukup menambah diujungnya [:3], sedangkan dalam query limit 3.

24. Crud : Mengubah Data
Mengubah data, disini perannya sangat penting karena saat kita salah dalam melakukan input data maka kita harus mengubahnya atau mengeditnya dengan menggunakan fitur update ini atau fitur ubah data. Ini lebih efektif ya, dibangdingkan dengan saat kita hapus input ulang begitu seterusnya saat melakukan kesalahan. Ubah data sebenarnya sama dengan form menambah data bedanya form ubah data sudah terisi  oleh data yang ingin kita ubah, misalnya seperti ingin mengubah judul yang dari Bhs.Indonesia menjadi IPA, lalu klik simpan dan selesai. 

25. Crud : Hapus Data
Hapus data juga penting dalam aplikasi, karena apabila kita sudah perlu data tersebut mau di gunakan apalagi. Fungsinya untuk menghapus data yang sudah tidak digunakan oleh user. Sebelum menggunakan action/aksi hapus sebelumnya terlebih dahulu membuat konfirmasi yang berisi apakah yakin ingin menghapus atau tidak. 

26. Authentication : Login & logout
Authentication merupakan proses verifikasi/validasi identitas user yang terdaftar sebelum mengakses system. Dengan ini kita jadi bisa membatasi user mana saja yang boleh manambah data, mengubah data, dan menghapus data. Jadi tidak sembarang user mengakses halaman-halaman tersebut . django ada system authentication yang akan kita gunakan yang bernama class LoginView untuk membuat namanya sama seperti membuat log in django admin. Berarti saat ingin membuat yang baru bisa mambuat di terminal.

27. Mengakses Username di Template
Biasanya kita login ke dalam aplikasi ada terdapat informasi user atau siapa yang saat ini sedang login atau yang sedang menggunakan aplikasi. Apabila saat kita log out dan tidak terdapat informasi maka kita bisa menggunakan attributes is_authenticated. Jika user sudah melakukan log in maka tampilkan informasi user nya.

28. Sign up / Tambah User
Episode kali ini kita akan membuat form sign up agar membuat user bisa login ke aplikasi perpustakaan kita. Sebenarnya ini berhubungan dengan episode django admin karena di dalamnya terdapat username django adminnya. Kalau kita lihat di dokumentasi resmi ini ada sebuah user form yang bernama UserCreationForm untuk membuat user baru. 

29. Upload File
Episode kali ini kita akan membahas tnetang upload file seperti misalnya kita upload cover buku kita akan menambahkan file baru pada model buku yang bernama cover sehingga di dalam tambah buku nanti akan muncul yang baru seperti cover atau muncul di ubah buku. Di  buku kita akan menambahkan kolom baru yaitu cover sebagai informasi buku yang kita masukkan. 

30. Export File
Episode kali ini kita akan membuat form sign up agar membuat user bisa login ke aplikasi perpustakaan kita. Sebenarnya ini berhubungan dengan episode django admin karena di dalamnya terdapat username django adminnya. Kalau kita lihat di dokumentasi resmi ini ada sebuah user form yang bernama UserCreationForm untuk membuat user baru. 

31. Virtual Environment 
Kali ini kita akan membahas tentang virtual environment atau lingkungan virtual, dalam kasus ini lingkungan virtual berguna untuk mengisolasi projek yang kita buat. Setiap kita membuat projek didalam lingkungan virtual ini, projek tersebut akan terisolasi dari direktori system dan memiliki paket python sendiri yang terinstal di lingkugan virtual tersebut. Lingkungan system operasi lebih besar yang didalam nya sudah ada django versi 2.2.12,pillow versi 7.1.2, dan django-import-export versi 2.2.0. kita juga sudah membuat aplikasi perspustakaan di lingkungan system tersebut dengan menggunakan django versi 2.2.12. apabila kita membuat projek di dalam lingkungan virtual environment 1 dan virtual environment 2. Di dalam virtual env 1 terdapat aplikasi perpustakaan yang dibangun dengan django 1.11 sedangkan di dalam virtual env 2 terdapat juga aplikasi yang dibangun dengan django 3.0.8 mysqlclient.

32. Persiapan Deployment
Deployment adalah kegiatann untuk menyebarkan aplikasi yang telah dikerjakan oleh developer (pengembang). Artinya kita mempublish projekk atau aplikasi yang kita buat untuk dilihat oleh ornang lain. 

33. Deployment Belajar Django
Kita akan mendeploy aplikasi kita ke server. Dengan awalan mengcoding di laptop kita di local lalu mengupload ke github lalu di clon atau ditarik ke computer server untuk dideploy disana.  
Saat aplikasi kita dalam mode production disetting dan debug masih nilainya masih dalam true jadi kalau misalkan salah menuju ke halaman pasti akan eror .
Saat kita dalam mode production kita tidak boleh dibiasakan mengubah tampilan saat mode dalam production, apabila terjadi eror akan berakibat fatal maka itu kalau kita ingin mengambangkan aplikasi yang dalam production kita hanya perlu mengembangkannya di local dan kita masuk ke tahap development atau tahap pengembangan lagi seperti mengubah tampilan atau menambah fitur yang diinginkan. 
